plugins {
    id 'java-library'
    id 'application'
}

group = 'br.com.nubank'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    systemProperties "file.encoding": "UTF-8"
}

tasks.withType(Javadoc).configureEach {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'org.slf4j:slf4j-simple:2.0.16'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.15.2'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

test {
    useJUnitPlatform()
}

application {
    mainClass.set("br.com.nubank.CapitalGains")
}

task runWithInput(type: JavaExec) {
    mainClass.set('br.com.nubank.CapitalGains')
    classpath = sourceSets.main.runtimeClasspath
    standardInput = new FileInputStream('scenarios/case-all.txt')
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'br.com.nubank.CapitalGains'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    with jar
    archiveBaseName.set('capital-gains')
    archiveClassifier.set('all')
    destinationDirectory = file("$rootDir")
}